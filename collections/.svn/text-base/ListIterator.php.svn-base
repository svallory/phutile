<?php
require_once(realpath(dirname(__FILE__)) . '/../../NeoBase/collections/List.php');

class ListIterator {
	/**
	 * @AssociationType NeoBase.collections.List
	 */
	private $_unnamed_List_;

	/**
	 * @ParamType comp Component 2
	 * Insere o elemento especificado na lista (operaзгo opcional).
	 */
	public function add(Component_2 $comp) {
		// Not yet implemented
	}

	/**
	 * @ReturnType boolean
	 * Retorna "true" caso o elemento atual nгo seja o ъltimo (operaзгo opcional).
	 */
	public function hasNext() {
		// Not yet implemented
	}

	/**
	 * @ReturnType boolean
	 * Retorna "true" caso o elemento atual nгo seja o primeiro (operaзгo opcional).
	 */
	public function hasPrevious() {
		// Not yet implemented
	}

	/**
	 * @ReturnType Component 2
	 * Retorna o prуximo elemento na lista.
	 */
	public function next() {
		// Not yet implemented
	}

	/**
	 * @ReturnType int
	 * Retorna o index do elemento que seria retornado por um "next".
	 */
	public function nextIndex() {
		// Not yet implemented
	}

	/**
	 * @ReturnType Component 2
	 * Retorna o elemento anterior desta lista.
	 */
	public function previous() {
		// Not yet implemented
	}

	/**
	 * @ReturnType int
	 * Retorna o index do elemento que seria retornado por um "previous".
	 */
	public function previousIndex() {
		// Not yet implemented
	}

	/**
	 * Remove da lista o ъltimo elemento que foi retornado por um "next" ou "previous" (operaзгo opcional)
	 */
	public function remove() {
		// Not yet implemented
	}

	/**
	 * @ParamType comp Component 2
	 * Substitui o ъltimo elemento retornado pelo "next" ou "previous" com o elemento especificado (operaзгo opcional).
	 */
	public function set(Component_2 $comp) {
		// Not yet implemented
	}
}
?>